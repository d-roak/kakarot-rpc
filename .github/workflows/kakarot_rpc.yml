---
name: RPC

on:
  release:
    types: [published]

env:
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}/node
  DOCKER_USERNAME: ${{ github.actor }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      # Install Foundry
      - name: install foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      # Install Python
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Setup the Kakarot submodule
        run: make setup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: ./.kakarot
  # Inspired by Reth CI.
  # <https://github.com/paradigmxyz/reth/blob/027d50fc105fd527dca0bf56fe51b7240f119e66/.github/workflows/docker.yml>
  build:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        include:
          - platform: amd64
            target: x86_64-unknown-linux-gnu
          - platform: arm64
            target: aarch64-unknown-linux-gnu
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: ./.kakarot
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: taiki-e/install-action@cross
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Rust build
        run: |
          RUSTFLAGS="-C link-arg=-lgcc -Clink-arg=-static-libgcc" \
            cross build --bin kakarot-rpc --release --target ${{ matrix.target }}
          mkdir -p ./bin/${{ matrix.platform }}
          mv target/${{ matrix.target }}/release/kakarot-rpc ./bin/${{ matrix.platform }}/kakarot-rpc

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags:
            ${{ env.REGISTRY_IMAGE }}:${{ github.ref_name }}, ${{
            env.REGISTRY_IMAGE }}:latest
          context: .
          file: ./docker/rpc/Dockerfile.cross
          platforms: linux/amd64,linux/arm64
