# trunk-ignore-all(yamllint/empty-values)
version: "3.8"

services:
  starknet:
    image: nethermind/juno:v0.9.4
    ports:
      - 6060:6060
    volumes:
      - juno_files:/var/lib/juno
    command: >
      --pending-poll-interval "1s"
      --http
      --http-host 0.0.0.0
      --http-port 6060
      --db-path /var/lib/juno
      --eth-node wss://eth-sepolia.g.alchemy.com/v2/WIUR5JUZXieEBkze6Xs3IOXWhsS840TX
      --cn-name kakarot-sepolia
      --cn-feeder-url https://gateway.kakarot.sw-dev.io/feeder_gateway/
      --cn-gateway-url https://gateway.kakarot.sw-dev.io/gateway/
      --cn-l1-chain-id 0xaa36a7
      --cn-l2-chain-id kkrt
      --cn-core-contract-address 0x9DAd05893305352cDd142F79e36bc39393F23770
      --cn-unverifiable-range 0,1000000
    networks:
      - internal

  starknet-explorer:
    image: public.ecr.aws/o5q6k5w4/stark_compass_explorer:latest
    ports:
      - 4000:4000
    env_file:
      - ./docker/env/stark-compass.env
    depends_on:
      starknet-explorer-db:
        condition: service_started
      starknet:
        condition: service_started
    extra_hosts:
      - host.docker.internal:172.17.0.1
    networks:
      - internal

  starknet-explorer-db:
    image: postgres:15.3
    ports:
      - 5432:5432
    env_file:
      - ./docker/env/postgres.env
    volumes:
      - starknet-explorer:/var/lib/postgresql/data/

  kakarot-rpc:
    image: ghcr.io/kkrt-labs/kakarot-rpc/node:latest
    pull_policy: always
    ports:
      - 3030:3030
    env_file:
      - ./docker/env/kakarot-node.sepolia.env
    restart: on-failure
    depends_on:
      starknet:
        condition: service_started
    networks:
      - internal

  apibara-dna:
    extends:
      file: docker-compose.yaml
      service: apibara-dna
    command:
      - start
      - --rpc=http://starknet:6060
      - --wait-for-rpc
      - --data=/data

  ### MongoDB with Mongo Express
  mongo:
    extends:
      file: docker-compose.yaml
      service: mongo
        
  clone-repo:
    extends:
      file: docker-compose.yaml
      service: clone-repo

  indexer:
    image: quay.io/apibara/sink-mongo
    command:
      - run
      - /code/kakarot-indexer/src/main.ts
    env_file:
      - ./docker/env/indexer.env
    volumes:
      - indexer_code:/code
    restart: on-failure
    networks:
      - internal
    depends_on:
      clone-repo:
        condition: service_completed_successfully
      starknet:
        condition: service_started

networks:
  internal:
    driver: bridge
  default:
    driver: bridge
  close:
    driver: bridge

volumes:
  apibara:
  mongo_data:
  indexer_code:
  pgadmin_data:
  juno_files:
  starknet-explorer:
